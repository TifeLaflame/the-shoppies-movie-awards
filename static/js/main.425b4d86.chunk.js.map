{"version":3,"sources":["components/Elements.js","components/Header.js","components/MovieItem.js","components/AddNomination.js","components/RemoveNomination.js","components/Modal.js","App.js","reportWebVitals.js","index.js"],"names":["Container","styled","div","HeadWrap","AppHeading","h1","SubHeading","h3","InputWrap","Input","input","MovieWrap","Img","img","Div","SectionHeading","h4","Header","heading","subHeading","MovieItem","props","ActionComponent","actionComponent","movieData","actionDisabled","handleNomination","posterImageURL","Poster","className","src","alt","Title","Year","disabled","AddNomination","onClick","RemoveNomination","process","Modal","show","handleToggle","id","MOVIE_STORAGE_KEY","App","useState","movies","setMovies","searchQuery","setSearchQuery","movieNominations","setMovieNominations","errorMessage","setErrorMessage","showBanner","setShowBanner","loading","setLoading","useEffect","a","url","fetch","blob","json","result","Search","length","Error","tempErrorMessage","console","log","getMovies","nomMovies","localStorage","getItem","savedNomMovies","JSON","parse","saveToLocalStorage","items","setItem","stringify","type","value","onChange","e","target","placeholder","color","height","width","timeout","map","movie","includes","newMovies","addNomination","imdbID","filter","removeNomination","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.425b4d86.chunk.js","sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  max-width: 1300px;\n  width: 100%;\n  margin: 0 auto;\n  padding: 0 20px;\n  position: relative;\n`;\nexport const HeadWrap = styled.div`\n  font-family: 'Public Sans', sans-serif;\n  text-align: center;\n  margin-top: 20px;\n  color: #FDFFFF;\n`;\n\nexport const AppHeading = styled.h1`\n  font-size: 2em;\n  padding-top: 20px;\n`;\n\nexport const SubHeading = styled.h3`\n  font-weight:400;\n  padding-top: 10px;\n  padding-bottom: 15px;\n`;\n\nexport const InputWrap = styled.div`\n  width: 800px;\n  margin: 0 auto;\n  margin-bottom: 20px;\n`;\n\nexport const Input = styled.input`\n  width: 100%;\n  padding: 16px 34px;\n  line-height: 16px;\n  font-size: 16px;\n  border-radius: 40px;\n  border: 2.5px solid #3bc0d0;\n  color: #3bc0d0;\n  font-family: 'Lato', sans-serif;\n  background: #FDFFFF; \n  background-image: url(/the-shoppies-movie-awards/images/search.png);\n  background-repeat: no-repeat;\n  background-position: 1.5%; \n  background-size: 24px 24px;\n  padding-left: 42px;\n\n  ::placeholder,\n  ::-webkit-input-placeholder {\n    color: #54B3BE;\n    opacity: 0.9;\n  }\n  &:focus {\n    outline: none;\n  }\n`;\n\nexport const MovieWrap = styled.div`\n  display: flex;\n  flex-wrap: wrap;\n  border: 2.5px solid #3bc0d0;\n  border-radius: 10px; \n  margin-top: 15px;\n`;\n\nexport const Img = styled.img`\n  max-width: 100%;\n  height: 320px;\n  text-align: center;\n  vertical-align: middle;\n`;\n\nexport const Div = styled.div`\n  width: 48%;\n  padding: 20px;\n`;\n\nexport const SectionHeading = styled.h4`\n  color: #FDFFFF;\n  font-family: 'Public Sans', sans-serif;\n  font-weight: 500;\n  font-size:1.5em;\n  padding: 0 15px; \n`;\n\n","import React from 'react';\nimport { HeadWrap, AppHeading, SubHeading } from './Elements';\n\n\nconst Header = ({ heading, subHeading }) => (\n  <HeadWrap>\n    <AppHeading>{heading}</AppHeading>\n    <SubHeading>{subHeading}</SubHeading>\n  </HeadWrap>\n);\n\nexport default Header;\n","import React from 'react';\nimport { Img } from './Elements';\n\nconst MovieItem = (props) => {\n  const {\n    actionComponent: ActionComponent, movieData, actionDisabled, handleNomination\n  } = props;\n  const posterImageURL = movieData.Poster === \"N/A\" ? \"https://dummyimage.com/220x320/262626/3bc1d0&text=No+poster+found\" : movieData.Poster;\n\n  return (\n    <div className=\"movie\">\n      <div className=\"movieitem\">\n        <Img src={posterImageURL} alt={movieData.Title} /> \n        \n        <div className=\"overlay\">\n          <h4>{movieData.Title}</h4>\n          <p>{movieData.Year}</p>\n        </div>     \n      </div>\n      <div className=\"cta\">\n      <ActionComponent disabled={actionDisabled} handleNomination={handleNomination} />\n    </div> \n  </div>\n  );\n \n}\n\nexport default MovieItem;\n","import React from 'react';\n\n\nconst AddNomination = ({disabled, handleNomination}) => (\n  <>\n    <button className=\"btn btnPrimary\" disabled={disabled}\n    onClick={handleNomination}>Nominate</button>\n  </>\n);\n\nexport default AddNomination;\n","import React from 'react';\n\n\nconst RemoveNomination = ({handleNomination}) => (\n  <>\n    <button className=\"btn btnSec\"\n      onClick={handleNomination}>\n      Remove \n      <img src={process.env.PUBLIC_URL + '/images/close.png'} alt='Remove Nominated Movie' className='close'/>\n    </button>\n  </>\n);\n\nexport default RemoveNomination;\n","import React from 'react';\n\nconst Modal = ({show, handleToggle}) => (\n  <div className={show ? 'visible': ''} id='modal'>\n    <h4 className='modalHeading'>You've nominated 5 movies</h4>\n    <img \n      src='/the-shoppies-movie-awards/images/close.png' \n      alt='Close banner' \n      className='closeModal'\n      onClick={handleToggle}\n    />\n  </div>\n);\n\nexport default Modal;\n","import React, { useState, useEffect } from 'react';\nimport \"react-loader-spinner/dist/loader/css/react-spinner-loader.css\";\nimport Loader from 'react-loader-spinner'\nimport Header from './components/Header';\nimport MovieItem from './components/MovieItem';\nimport AddNomination from './components/AddNomination';\nimport RemoveNomination from './components/RemoveNomination';\nimport { Container, MovieWrap, InputWrap, Input, Div, SectionHeading } from './components/Elements';\nimport Modal from './components/Modal';\nimport './App.css';\n\nconst API_KEY = '232670a6';\nconst MOVIE_STORAGE_KEY = 'Movies Nominated';\n\nconst App = () => {\n  const [movies, setMovies] = useState([]);\n  const [searchQuery, setSearchQuery] = useState('');\n  const [movieNominations, setMovieNominations] = useState([]);\n  const [errorMessage, setErrorMessage]= useState('');\n  const [showBanner, setShowBanner] = useState(false);\n  const [loading, setLoading] = useState(false);\n\n  useEffect(() => {\n    const getMovies = async (searchQuery) => {\n      const url = `https://www.omdbapi.com/?s=${searchQuery}&apikey=${API_KEY}`;\n      try {\n        setLoading(true);\n        const blob = await fetch(url);\n        const result = await blob.json();\n        if (\"Search\" in result ) {\n          const movies = result.Search;\n          if (movies && movies.length > 0) {\n            setMovies(movies);\n          } \n        } else if (\"Error\" in result ) {\n          let tempErrorMessage;\n\n          switch (result.Error) {\n            case \"Too many results.\":\n              tempErrorMessage = \"Too many results. Try adding more characters.\";\n              break;\n            case \"Movie not found!\":\n              tempErrorMessage = \"No results found.\";\n              break;\n            case \"Incorrect IMDb ID.\":\n              tempErrorMessage = \"\";\n              break;\n            default:\n              tempErrorMessage = \"Something went wrong.\"\n              break;\n          }\n          setErrorMessage(tempErrorMessage);\n          setMovies([]);\n        }\n        setLoading(false);\n    } catch(error) {\n        setLoading(false);\n        console.log(error);\n      }\n    };\n\n    getMovies(searchQuery);\n  }, [searchQuery]);\n\n  useEffect(() => {\n    const nomMovies = localStorage.getItem(MOVIE_STORAGE_KEY);\n    const savedNomMovies = JSON.parse(nomMovies);\n    if (savedNomMovies) {\n      setMovieNominations(savedNomMovies); \n    }\n  }, []);\n\n  const handleToggle = () => {\n    setShowBanner(!showBanner);\n  }\n\n  const handleOnChange = e => {\n    setSearchQuery(e.target.value);\n  }\n\n  const saveToLocalStorage = items => {\n    localStorage.setItem(MOVIE_STORAGE_KEY, JSON.stringify(items));\n  }\n\n  const addNomination = movie => {\n    const newMovies = [...movieNominations, movie];\n    if (newMovies.length === 5) {\n      setShowBanner(true);\n    }\n    setMovieNominations(newMovies); \n    saveToLocalStorage(newMovies);\n  }\n\n  const removeNomination = movie => {\n    const newMovies = movieNominations.filter(value => value.imdbID !== movie.imdbID);\n    setMovieNominations(newMovies);\n    saveToLocalStorage(newMovies);\n  }\n\n  const renderSearchResults = () => {\n    if (movies.length === 0 && errorMessage) {\n      return (\n        <div className='error'>\n          <p>{errorMessage}</p>\n        </div>\n      );\n    }\n    return (\n      <Div>\n        <SectionHeading>Search Results</SectionHeading>\n          <MovieWrap>\n            {movies.map(movie => {\n              let actionDisabled = movieNominations.includes(movie);\n              return (\n                <MovieItem \n                  key={movie.imdbID} \n                  movieData={movie}\n                  actionComponent={AddNomination}\n                  actionDisabled={actionDisabled}\n                  handleNomination={() => addNomination(movie)}      \n                />\n              );\n            })}\n          </MovieWrap>\n      </Div>\n    );\n  }\n\n  return ( \n    <Container>\n      <Header heading='Welcome to The Shoppies' subHeading='Movie awards for entrepreneurs' />\n      <InputWrap>\n        <Input \n          type='text'\n          value={searchQuery}\n          onChange={handleOnChange}\n          placeholder='Search for a movie title'>\n        </Input>\n      </InputWrap>\n      {loading \n        ? \n          <div className='loaderDiv'>\n            <Loader\n              type=\"ThreeDots\"\n              color=\"#3bc0d0\"\n              height={80}\n              width={80}\n              timeout={5500} \n            />\n          </div>\n        : <section>\n            {renderSearchResults()}\n            <Div>\n              <SectionHeading>Nominations</SectionHeading>\n                <MovieWrap>\n                {movieNominations.map(movie => (\n                  <MovieItem \n                    key={movie.imdbID}\n                    movieData={movie} \n                    actionComponent={RemoveNomination}\n                    handleNomination={() =>removeNomination(movie)} />\n                ))}\n                </MovieWrap>    \n            </Div>\n          </section> \n      }\n      <Modal show={showBanner} handleToggle={handleToggle}/>\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}